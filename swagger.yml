swagger: "2.0"
info:
  description: "This is a sample rest service"
  version: "1.0.0"
  title: "My first Service"
  
host: "localhost"
basePath: "/v2"
tags:
- name: "pet"
  description: "Everything about your Pets"
  externalDocs:
    description: "Find out more"
    url: "http://someURL"

schemes:
- "https"
- "http"

#######################################################################################
#                      Parameters                                                     #
#######################################################################################

    

    
#######################################################################################
#                      PATHS                                                          #
#######################################################################################
paths:
  /pet/pets:
    get:
      tags:
      - "pet"
      summary: "Gets All Pets"
      description: "Gets all the pets"
      operationId: "findPetsByStatus"
      produces:
      - "application/json"
      
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
        400:
          description: "Invalid status value"
          
  /pet/{petId}/collaterals:
    get:
      tags:
      - "getCollateralPets"
      summary: "Gets specific Collateral Pet"
      description: "Gets specific Collateral pet"
      operationId: "getCollateralPets"
      parameters:
        - name: petId
          in: path
          description: identifies the unique pet 
          type: string
          required: true
      produces:
      - "application/json"
      
      responses:
        200:          
             $ref: "#/responses/200GetCollateralPetsResponse"
        400:
          description: "Invalid status value" 
          
  /pet/allPetcollaterals:
    get:
      tags:
      - "getAllPetcollaterals"
      summary: "Gets All Collateral Pets"
      description: "Gets all the Collateral pets"
      operationId: "getAllPetcollaterals"      
      produces:
      - "application/json"
      
      responses:
        200:          
             $ref: "#/responses/200GetAllCollateralPetsResponse"
        400:
          description: "Invalid status value" 
      
  
  
#######################################################################################
#                      Parameters                                                     #
#######################################################################################
responses:
    200GetCollateralPetsResponse:
        description: OK DOK 
        schema: 
            properties:
                data:
                    type: object 
                    properties: 
                        collaterals:
                            type: array
                            items:
                                $ref: '#/definitions/CollateralParent'
                                
    200GetAllCollateralPetsResponse:
        description: OK DOK 
        schema: 
            properties:
                data:
                    type: object 
                    properties: 
                        collaterals:
                            type: array
                            items:
                                $ref: '#/definitions/CollateralChild'
                                
#######################################################################################
#                      Model Definitions                                                     #
#######################################################################################

definitions:

    CollateralParent:
        discriminator: collateralId
        required:
            - collateralId
        description: This is an important object  
        type: object
        properties:
            collateralId:
                description: some description for this field 
                type: string 
            propertyAddress:
                $ref: "#/definitions/PhysicalAddress"
            facilities:
                type: array
                items:
                    $ref: "#/definitions/Facilities"
    
    CollateralChild:
        description: This is a child object of CollateralParent object
        
        allOf:
            - $ref: '#/definitions/CollateralParent' # CollateralChild has all properties of CollateralParent
            - type: object
              properties:
                    applicationIdList:
                        type: array
                        items:
                            type: string 
    
    Facilities:
        description: Details of Facilities provided for the pet 
        type: object
        properties:
            facilityType:
                description: The type of facility 
                type: string 
                enum:
                    - KENNEL
                    - DOWN BLANKET 
            isFacilityLongTerm:
                description: provides details of the length of tenure that a pet can stay in 
                type: boolean
            validityExpiryDateTime:
                type: string 
                format: YYYY-MM-DDTHH:MI:SSZ
                
    PhysicalAddress:
        description: Address of pet residence 
        type: object 
        properties:
            city:
                description: resident city of pet 
                type: string 
            country:
                description: resident country of pet 
                type: string 
  
    Pet:
        type: "object"
        required:
        - "name"
        properties:
          id:
            type: "integer"
            format: "int64"
          
          name:
            type: "string"
            example: "doggie"
          status:
            type: "string"
            description: "pet status in the store"
            enum:
            - "available"
            - "pending"
            - "sold"
        xml:
          name: "Pet"
  
